hosting providers: AWS, Azure, GoogleCloud

AWS EC2:
sudo yum update -y
sudo amazon-linux-extras install docker
sudo service docker start

docker build -t node-dep-example-1 .
docker tag node-dep-example-1 ahazimeh/node-example-1
docker push ahazimeh/node-example-1

ssh -i "example-1.pem" ec2-user@ec2-3-80-86-246.compute-1.amazonaws.com
sudo docker pull ahazimeh/node-example-1

sudo docker run -d --rm -p 80:80 ahazimeh/node-example-1

go to security groups and allow port 80 in Inbound rules
3.80.86.246

container name node-demo
image: ahazimeh/node-example-1

ECS: to update ecs instance go to cluster tasks section
click on your task definition
create new revision
NOTE: An Alternative would be to NOT create a new task revision but
just "UPDATE SERVICE" and select "Force new Deployment"


second project
backend:
docker build -t goals-node .
docker tag goals-node ahazimeh/goals-node
docker push ahazimeh/goals-node


when creating a cluster with ecs:
networking only cluster

check vpc and keep the defaults, this insures that aws creates a private cloud for the cluster

after that go to task definition and create a new 1

then create a cluster
under load ballancer choose application load ballancer
this insures that incomming traffic will be handled in an efficient way
but will also help with assigning a custom domain

use ip for target group, this is required because we are using fargat for running our containers

10.0.0.56

for relational databases there is aws rds and for mongodb there is mongodb atlas